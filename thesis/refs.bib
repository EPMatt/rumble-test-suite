
@misc{RumblePaper,
	title={Rumble: Data Independence for Large Messy Data Sets}, 
	author={Ingo Müller and Ghislain Fourny and Stefan Irimescu and Can Berker Cikis and Gustavo Alonso},
	year={2020},
	eprint={1910.11582},
	archivePrefix={arXiv},
	primaryClass={cs.DB}
}

@online{TestSuite,
	author = {W3C},
	title = {XQuery/XPath/XSLT 3.* Test Suite},
	year = {1994-2013},
	url = {https://dev.w3.org/2011/QT3-test-suite/},
	urldate = {2020-12-06}
}

@online{JSON,
	title = {Introducing JSON},
	url = {https://www.json.org/json-en.html},
	urldate = {2021-02-12}
}

@online{JSONiq,
	author = {jsoniq.org},
	title = {JSONiq - The JSON Query language},
	year = {2011-2020},
	url = {hhttps://www.jsoniq.org},
	urldate = {2020-12-06}
}

@online{TestSuiteCVSRepository,
	author = {W3C},
	title = {XQuery/XPath/XSLT 3.* Test Suite CVS Repository},
	year = {2011},
	url = {https://dev.w3.org/cvsweb/2011/QT3-test-suite/},
	urldate = {2020-12-06}
}

@online{TestSuiteGitHubRepository,
	author = {W3C},
	title = {XQuery/XPath/XSLT 3.* Test Suite GitHub Repository},
	year = {2020},
	url = {https://github.com/w3c/qt3tests},
	urldate = {2020-12-06}
}

@online{Saxon,
	author = {Michael H. Kay},
	title = {SAXON: The XSLT and XQuery Processor},
	year = {2020},
	url = {http://saxon.sourceforge.net},
	urldate = {2020-12-06}
}

@online{SaxonReport,
	author = {Michael H. Kay},
	title = {QT3 Test Suite Result Summary},
	year = {2016},
	url = {https://dev.w3.org/2011/QT3-test-suite/ReportingResults31/report.html},
	urldate = {2020-12-06}
}

@online{RumbleBranch,
	author = {Stevan Mihajlovic},
	title = {Rumble Repository},
	year = {2020},
	url = {https://gitlab.inf.ethz.ch/gfourny/rumble/-/tree/research-project-stevan-mihajlovic},
	urldate = {2020-12-24}
}

@online{RumbleSupportedTypes,
	author = {Stefan Irimescu and Ghislain Fourny and Ingo Müller and Dan-Ovidiu Graur and Can Berker Çıkış and Renato Marroquin and Falko Noé and Ioana Stefan and Andrea Rinaldi and Gustavo Alonso},
	title = {Rumble Unsupported Types},
	year = {2017-2020},
	url = {https://rumble.readthedocs.io/en/latest/JSONiq/#unsupportedunimplemented-features-beta-release},
	urldate = {2020-12-26}
}

@online{RumbleSupportedErrorCodes,
	author = {Stefan Irimescu and Ghislain Fourny and Ingo Müller and Dan-Ovidiu Graur and Can Berker Çıkış and Renato Marroquin and Falko Noé and Ioana Stefan and Andrea Rinaldi and Gustavo Alonso},
	title = {Rumble Supported Error Codes},
	year = {2017-2020},
	url = {https://rumble.readthedocs.io/en/latest/Error%20codes/},
	urldate = {2020-12-26}
}

@misc{BigDataCourse,
	author = {Ghislain Fourny},
	title = {ETHZ Big Data Lecture - 263-3010-00L},
	year = {2018},
}

@INPROCEEDINGS{HDFS,
	author={K. {Shvachko} and H. {Kuang} and S. {Radia} and R. {Chansler}},
	booktitle={2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST)}, 
	title={The Hadoop Distributed File System}, 
	year={2010},
	volume={},
	number={},
	pages={1-10},
	doi={10.1109/MSST.2010.5496972}
}

@book{Hadoop,
	author = {White, Tom},
	title = {Hadoop: The Definitive Guide},
	year = {2015},
	isbn = {1491901632},
	publisher = {O'Reilly Media, Inc.},
	edition = {4th},
	abstract = {Get ready to unlock the power of your data. With the fourth edition of this comprehensive guide, you'll learn how to build and maintain reliable, scalable, distributed systems with Apache Hadoop. This book is ideal for programmers looking to analyze datasets of any size, and for administrators who want to set up and run Hadoop clusters. Using Hadoop 2 exclusively, author Tom White presents new chapters on YARN and several Hadoop-related projects such as Parquet, Flume, Crunch, and Spark. You'll learn about recent changes to Hadoop, and explore new case studies on Hadoop's role in healthcare systems and genomics data processing.}
}

@article{GFS,
	author = {Ghemawat, Sanjay and Gobioff, Howard and Leung, Shun-Tak},
	title = {The Google File System},
	year = {2003},
	issue_date = {December 2003},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {37},
	number = {5},
	issn = {0163-5980},
	url = {https://doi.org/10.1145/1165389.945450},
	doi = {10.1145/1165389.945450},
	journal = {SIGOPS Oper. Syst. Rev.},
	month = oct,
	pages = {29–43},
	numpages = {15},
	keywords = {data storage, clustered storage, fault tolerance, scalability}
}

@inproceedings{MapReduce,
	title	= {MapReduce: Simplified Data Processing on Large Clusters},
	author	= {Jeffrey Dean and Sanjay Ghemawat},
	year	= {2004},
	booktitle	= {OSDI'04: Sixth Symposium on Operating System Design and Implementation},
	pages	= {137--150},
	address	= {San Francisco, CA}
}

@inproceedings{YARN,
	author = {Vavilapalli, Vinod Kumar and Murthy, Arun C. and Douglas, Chris and Agarwal, Sharad and Konar, Mahadev and Evans, Robert and Graves, Thomas and Lowe, Jason and Shah, Hitesh and Seth, Siddharth and Saha, Bikas and Curino, Carlo and O'Malley, Owen and Radia, Sanjay and Reed, Benjamin and Baldeschwieler, Eric},
	title = {Apache Hadoop YARN: Yet Another Resource Negotiator},
	year = {2013},
	isbn = {9781450324281},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/2523616.2523633},
	doi = {10.1145/2523616.2523633},
	abstract = {The initial design of Apache Hadoop [1] was tightly focused on running massive, MapReduce jobs to process a web crawl. For increasingly diverse companies, Hadoop has become the data and computational agor\'{a}---the de facto place where data and computational resources are shared and accessed. This broad adoption and ubiquitous usage has stretched the initial design well beyond its intended target, exposing two key shortcomings: 1) tight coupling of a specific programming model with the resource management infrastructure, forcing developers to abuse the MapReduce programming model, and 2) centralized handling of jobs' control flow, which resulted in endless scalability concerns for the scheduler.In this paper, we summarize the design, development, and current state of deployment of the next generation of Hadoop's compute platform: YARN. The new architecture we introduced decouples the programming model from the resource management infrastructure, and delegates many scheduling functions (e.g., task fault-tolerance) to per-application components. We provide experimental evidence demonstrating the improvements we made, confirm improved efficiency by reporting the experience of running YARN on production environments (including 100% of Yahoo! grids), and confirm the flexibility claims by discussing the porting of several programming frameworks onto YARN viz. Dryad, Giraph, Hoya, Hadoop MapReduce, REEF, Spark, Storm, Tez.},
	booktitle = {Proceedings of the 4th Annual Symposium on Cloud Computing},
	articleno = {5},
	numpages = {16},
	location = {Santa Clara, California},
	series = {SOCC '13}
}

@inproceedings {RDD,
	author = {Matei Zaharia and Mosharaf Chowdhury and Tathagata Das and Ankur Dave and Justin Ma and Murphy McCauly and Michael J. Franklin and Scott Shenker and Ion Stoica},
	title = {Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing},
	booktitle = {9th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 12)},
	year = {2012},
	isbn = {978-931971-92-8},
	address = {San Jose, CA},
	pages = {15--28},
	url = {https://www.usenix.org/conference/nsdi12/technical-sessions/presentation/zaharia},
	publisher = {{USENIX} Association},
	month = apr,
}

@article{ApacheSpark,
	author = {Zaharia, Matei and Xin, Reynold S. and Wendell, Patrick and Das, Tathagata and Armbrust, Michael and Dave, Ankur and Meng, Xiangrui and Rosen, Josh and Venkataraman, Shivaram and Franklin, Michael J. and Ghodsi, Ali and Gonzalez, Joseph and Shenker, Scott and Stoica, Ion},
	title = {Apache Spark: A Unified Engine for Big Data Processing},
	year = {2016},
	issue_date = {November 2016},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {59},
	number = {11},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/2934664},
	doi = {10.1145/2934664},
	abstract = {This open source computing framework unifies streaming, batch, and interactive big data workloads to unlock new applications.},
	journal = {Commun. ACM},
	month = oct,
	pages = {56–65},
	numpages = {10}
}

@book{SparkDefinitiveGuide,
	author = {Chambers, Bill and Zaharia, Matei},
	title = {Spark: The Definitive Guide Big Data Processing Made Simple},
	year = {2018},
	isbn = {1491912219},
	publisher = {O'Reilly Media, Inc.},
	edition = {1st},
	abstract = {Learn how to use, deploy, and maintain Apache Spark with this comprehensive guide, written by the creators of the open-source cluster-computing framework. With an emphasis on improvements and new features in Spark 2.0, authors Bill Chambers and Matei Zaharia break down Spark topics into distinct sections, each with unique goals. Youll explore the basic operations and common functions of Sparks structured APIs, as well as Structured Streaming, a new high-level API for building end-to-end streaming applications. Developers and system administrators will learn the fundamentals of monitoring, tuning, and debugging Spark, and explore machine learning techniques and scenarios for employing MLlib, Sparks scalable machine-learning library. Get a gentle overview of big data and Spark Learn about DataFrames, SQL, and Datasets Sparks core APIsthrough worked examples Dive into Sparks low-level APIs, RDDs, and execution of SQL and Data Frames Understand how Spark runs on a cluster Debug, monitor, and tune Spark clusters and applications Learn the power of Structured Streaming, Sparks stream-processing engine Learn how you can apply MLlib to a variety of problems, including classification or recommendation}
}

@book{LearningSpark,
	author = {Karau, Holden and Konwinski, Andy and Wendell, Patrick and Zaharia, Matei},
	title = {Learning Spark: Lightning-Fast Big Data Analytics},
	year = {2015},
	isbn = {1449358624},
	publisher = {O'Reilly Media, Inc.},
	edition = {1st},
	abstract = {The Web is getting faster, and the data it delivers is getting bigger. How can you handle everything efficiently? This book introduces Spark, an open source cluster computing system that makes data analytics fast to run and fast to write. Youll learn how to run programs faster, using primitives for in-memory cluster computing. With Spark, your job can load data into memory and query it repeatedly much quicker than with disk-based systems like Hadoop MapReduce. Written by the developers of Spark, this book will have you up and running in no time. Youll learn how to express MapReduce jobs with just a few simple lines of Spark code, instead of spending extra time and effort working with Hadoops raw Java API. Quickly dive into Spark capabilities such as collect, count, reduce, and save Use one programming paradigm instead of mixing and matching tools such as Hive, Hadoop, Mahout, and S4/Storm Learn how to run interactive, iterative, and incremental analyses Integrate with Scala to manipulate distributed datasets like local collections Tackle partitioning issues, data locality, default hash partitioning, user-defined partitioners, and custom serialization Use other languages by means of pipe() to achieve the equivalent of Hadoop streaming}
}

@ARTICLE{JSONiqPaper,
	author={D. {Florescu} and G. {Fourny}},
	journal={IEEE Internet Computing}, 
	title={JSONiq: The History of a Query Language}, 
	year={2013},
	volume={17},
	number={5},
	pages={86-90},
	doi={10.1109/MIC.2013.97}
}

@MISC{JSONiqBook,
	author = {Ghislain Fourny},
	title = {JSONiq The SQL of NoSQL},
	year = {2013}
}

@online{RumbleYouTube,
	author = {Ingo Müller and Ghislain Fourny},
	title = {IRIS-HEP Topical Meeting (4 May 2020) - Rumble: JSONiq (query language) on Spark
	},
	year = {2021},
	url = {https://www.youtube.com/watch?v=dbUQZbtfNfk&feature=emb_logo},
	urldate = {2021-02-15}
}

@online{RumbleRepository,
	author = {Stefan Irimescu and Ghislain Fourny and Ingo Müller and Dan-Ovidiu Graur and Stevan Mihajlovic and Mario Arduini and Can Berker Çıkış and Renato Marroquin and Falko Noé and Ioana Stefan and Andrea Rinaldi and Gustavo Alonso},
	title = {Rumble GitHub Repository},
	year = {2017-2021},
	url = {https://github.com/RumbleDB/rumble},
	urldate = {2021-02-15}
}

@MISC{RumbleThesis,
	author = {Stefan Irimescu},
	title = {JSONiq on Spark},
	year = {2018},
	publisher = {ETH Zurich},
	edition = {MSc Thesis}
}

@article{ANTLR,
	author = {Parr, T. J. and Quong, R. W.},
	title = {ANTLR: A Predicated-<i>LL(k)</i> Parser Generator},
	year = {1995},
	issue_date = {July 1995},
	publisher = {John Wiley &amp; Sons, Inc.},
	address = {USA},
	volume = {25},
	number = {7},
	issn = {0038-0644},
	url = {https://doi.org/10.1002/spe.4380250705},
	doi = {10.1002/spe.4380250705},
	journal = {Softw. Pract. Exper.},
	month = jul,
	pages = {789–810},
	numpages = {22},
	keywords = {LL(k) parser, parser generator, predicates, compiler, parsing}
}

@MISC{RumbleMLThesis,
	author = {Can Berker Cikis},
	title = {Machine Learning with JSONiq},
	year = {2020},
	publisher = {ETH Zurich},
	edition = {MSc Thesis}
}

@online{Zorba,
	author = {Zorba},
	title = {Zorba NoSQL engine},
	year = {2013},
	url = {http://www.zorba.io/},
	urldate = {2021-02-21}
}

@online{WebSphere,
	author = {IBM Corp},
	title = {IBM WebSphere DataPower Gateways Release Notes},
	year = {2017},
	url = {https://www.ibm.com/support/knowledgecenter/ SS9H2Y_7.7.0/com.ibm.dp.doc/releasenotes.html},
	urldate = {2021-02-21}
}

@online{Xidel,
	title = {Xidel},
	url = {https://github.com/benibela/xidel},
	urldate = {2021-02-21}
}

@online{XqueryGrammar,
	title = {An Antlr4 implementation of xqDoc for XQuery},
	url = {https://github.com/xqdoc/xqdoc},
	urldate = {2021-02-21}
}

@online{XQueryRecommendation,
	author = {W3C},
	title = {XQuery 3.1: An XML Query Language
	W3C Recommendation},
	year = {2017},
	url = {https://www.w3.org/TR/xquery-31/},
	urldate = {2021-02-21}
}

@online{RegressionTesting,
	title = {Regression testing},
	url = {https://en.wikipedia.org/wiki/Regression_testing#cite_note-2},
	urldate = {2020-12-06}
}



